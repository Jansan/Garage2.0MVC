@model VehicleIndexViewModel
@inject Garage2._0MVC.Services.IFilterService service
@inject Garage2._0MVC.Services.IParkingService parkingService

@{
    ViewData["Title"] = "Index";
}

<h1>Vehicle Index</h1>

@if (parkingService.GetCurrentParking() > 0)
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}
else
{
    <p>
        <a href="myModal" data-toggle="modal" data-target="#myModal">Park a vehicle</a>
    </p>
}



<!--Vehicle Search-->
<form asp-action="Search">
    <div class="input-group mb-3">
        <input name="regSearch" type="text" class="form-control" placeholder="Search on registration number..." />
        <div class="input-group-append">
            <select asp-for="Type" asp-items="@await service.GetFilterAsync()" class="form-control">
                <option selected="selected" value="">All types</option>
            </select>
        </div>
        <div class="input-group-append">
            <button type="submit" class="btn btn-primary"><i class="fa fa-search">&emsp;Search</i></button>
        </div>
    </div>
</form>

<!--ViewComponent Parking: Parking Space Left | Total Parking Space-->
<vc:parking></vc:parking>

<!--Vehicle List-->
<partial name="VehiclePartial" model="@Model.Vehicles" />


<div class="container">
    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Parking is full, would you like to unpark?</h4>
                </div>
                <div class="modal-body">
                    <div class="float-right">
                        <a asp-action="Index">Back to vehicles list</a>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>